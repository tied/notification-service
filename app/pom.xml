<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.carlsberg.cx.notification-services</groupId>
    <artifactId>notification-services-parent</artifactId>
    <version>1.2.1</version>
  </parent>
  
  <artifactId>notification-services-app</artifactId>
  <name>CX Notification Application</name>
  <description>CX Notification Application</description>

  <properties>
    <snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>

    <dependency>
      <groupId>com.twilio.sdk</groupId>
      <artifactId>twilio</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sendgrid</groupId>
      <artifactId>sendgrid-java</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
    </dependency>

    <dependency>
      <groupId>org.zalando</groupId>
      <artifactId>logbook-spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>com.carlsberg.cx.notification-services</groupId>
      <artifactId>notification-services-api</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Failsafe Retry -->
    <dependency>
      <groupId>net.jodah</groupId>
      <artifactId>failsafe</artifactId>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.restdocs</groupId>
      <artifactId>spring-restdocs-mockmvc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>capital.scalable</groupId>
      <artifactId>spring-auto-restdocs-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-webmvc-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${org.projectlombok.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${org.mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <compilerArg>-Amapstruct.suppressGeneratorTimestamp=true</compilerArg>
            <compilerArg>-Amapstruct.suppressGeneratorVersionInfoComment=true</compilerArg>
            <compilerArg>-Amapstruct.defaultComponentModel=spring</compilerArg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <!-- Surefire -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <systemPropertyVariables>
            <org.springframework.restdocs.outputDir>
              ${snippetsDirectory}
            </org.springframework.restdocs.outputDir>
            <org.springframework.restdocs.javadocJsonDir>
              ${project.build.directory}/generated-javadoc-json
            </org.springframework.restdocs.javadocJsonDir>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <!-- Javadoc -->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>javadoc-no-fork</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <finalName>example-documentation</finalName>
          <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
          <doclet>capital.scalable.restdocs.jsondoclet.ExtractDocumentationAsJsonDoclet</doclet>
          <docletArtifact>
            <groupId>capital.scalable</groupId>
            <artifactId>${json-doclet.artifactId}</artifactId>
            <version>${spring-auto-restdocs.version}</version>
          </docletArtifact>
          <reportOutputDirectory>${project.build.directory}</reportOutputDirectory>
          <useStandardDocletOptions>false</useStandardDocletOptions>
          <show>package</show>
        </configuration>
      </plugin>

      <!-- Asciidoctor -->
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>output-html</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html</backend>
              <doctype>book</doctype>
              <attributes>
                <title>Notification Services Documentation</title>
                <toc>left</toc>
                <linkcss>false</linkcss>
              </attributes>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <sourceDirectory>src/main/asciidoc</sourceDirectory>
          <headerFooter>true</headerFooter>
          <attributes>
            <snippets>${snippetsDirectory}</snippets>
            <source-highlighter>highlightjs</source-highlighter>
          </attributes>
        </configuration>
      </plugin>

      <!-- Resources -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.outputDirectory}/static/docs
              </outputDirectory>
              <resources>
                <resource>
                  <directory>
                    ${project.build.directory}/generated-docs
                  </directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- ASCII Doc to Confluence -->
      <plugin>
        <groupId>org.sahli.asciidoc.confluence.publisher</groupId>
        <artifactId>asciidoc-confluence-publisher-maven-plugin</artifactId>
        <configuration>
          <asciidocRootFolder>src/main/asciidoc</asciidocRootFolder>
          <sourceEncoding>UTF-8</sourceEncoding>
          <skip>false</skip>
          <attributes>
            <snippets>${snippetsDirectory}</snippets>
            <source-highlighter>highlightjs</source-highlighter>
            <version>${project.version}</version>
          </attributes>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
